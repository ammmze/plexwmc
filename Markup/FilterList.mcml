<Mcml xmlns="http://schemas.microsoft.com/2008/mcml"
	  xmlns:app="assembly://PlexWMC/PlexWMC"
	  xmlns:sys="assembly://mscorlib/System"
	  xmlns:styles="resx://PlexWMC/PlexWMC.Resources/Styles"
	  xmlns:core="resx://PlexWMC/PlexWMC.Resources/CoreControls"
	  xmlns:me="Me">

	<!-- A list of filters on a filtered content page -->
	<UI Name="FilterList">
		<Properties>
			<app:FilteredContentPage Name="Page" FilteredContentPage="$Required"/>

      <!-- The layout of the items -->
      <FlowLayout Name="FlowLayout" Orientation="Horizontal" Spacing="1,0" AllowWrap="true"/>

      <AnchorLayoutInput Name="AlignToLeft"
				Left="Scroller,0,-100" Right="Scroller,0,-15" Horizontal="Far"
				Top="Scroller,0" Bottom="Scroller,1" Vertical="Center"
				ContributesToWidth="false"/>

      <AnchorLayoutInput Name="AlignToRight"
				Left="Scroller,1,15" Right="Scroller,1,100" Horizontal="Near"
				Top="Scroller,0" Bottom="Scroller,1" Vertical="Center"
				ContributesToWidth="false"/>
    </Properties>

    <Locals>
      <!-- Scrolling state -->
      <ScrollingHandler Name="ScrollHandler" HandlerStage="Bubbled"/>
      <ScrollingData Name="ScrollData"/>

      <!-- Scroll actions -->
      <Command Name="ScrollLeft" Description="Up"/>
      <Command Name="ScrollRight" Description="Down"/>
    </Locals>

    <Rules>
      <!-- Associate all the scrolling objects -->
      <Default Target="[ScrollHandler.ScrollingData]" Value="[ScrollData]"/>
      <Default Target="[ScrollData.Repeater]" Value="[Repeater]"/>

      <!-- Only show the scroll buttons if we can scroll in that direction -->
      <!-- <Binding Source="[ScrollData.CanScrollUp]" Target="[ScrollLeftButton.Visible]"/> -->
      <!-- <Binding Source="[ScrollData.CanScrollDown]" Target="[ScrollRightButton.Visible]"/> -->

      <Rule>
				<Conditions>
					<IsValid Source="[Page.Filters]"/>
				</Conditions>
				<Actions>
					<Set Target="[Repeater.Source]" Value="[Page.Filters.Options]"/>
				</Actions>
			</Rule>
		</Rules>

    <Content>
      <Panel Layout="Anchor">
        <Children>

          <!-- Scroll Left -->
          <me:ScrollButton Name="ScrollLeftButton" Model="[ScrollLeft]"
						Image="resx://PlexWMC/PlexWMC.Resources/MouseNavLeft" FocusImage="resx://PlexWMC/PlexWMC.Resources/MouseNavLeftFocus"
						LayoutInput="[AlignToLeft]" Visible="false"/>

          <!-- Scroll Right -->
          <me:ScrollButton Name="ScrollRightButton" Model="[ScrollRight]"
						Image="resx://PlexWMC/PlexWMC.Resources/MouseNavRight" FocusImage="resx://PlexWMC/PlexWMC.Resources/MouseNavRightFocus"
						LayoutInput="[AlignToRight]" Visible="false"/>

          <Scroller Name="Scroller" Orientation="Horizontal"
							ScrollingData="[ScrollData]" FadeSize="-5">
            <Children>

              <Repeater Name="Repeater"  Navigation="ContainHorizontal, RememberFocus" Layout="[FlowLayout]">
                <Content>

                  <me:FilterButton Option="[RepeatedItem]" Choice="[Page.Filters]"/>

                </Content>
              </Repeater>

            </Children>
          </Scroller>
        </Children>
      </Panel>
    </Content>
  </UI>

	<!-- A single filter from a filter list -->
	<UI Name="FilterButton">
		<Properties>
			<sys:Object Name="Option" Object="$Required"/>
			<Choice Name="Choice" Choice="$Required"/>
		</Properties>

		<Locals>
			<Command Name="SelectOption"/>
		</Locals>

		<Rules>
			<!-- When the button is clicked, set this guy as the selected filter. -->
			<Changed Source="[SelectOption.Invoked]">
				<Actions>
					<Set Target="[Choice.Chosen]" Value="[Option]"/>
				</Actions>
			</Changed>

			<!-- If we are the active filter set Selected to true. -->
			<Condition Source="[Choice.Chosen]" SourceValue="[Option]"
				Target="[SelectOption.Selected]" Value="true"/>
			<Default Target="[SelectOption.Selected]" Value="false"/>

			<!-- If this is a ModelItem, use the Description property for the label. -->
			<Rule>
				<Conditions>
					<IsType Source="[Option]" Type="ModelItem"/>
				</Conditions>
				<Actions>
					<Set Target="[SelectOption.Description]" Value="[Option!ModelItem.Description]"/>
				</Actions>
			</Rule>
			<!-- Otherwise just use ToString(). -->
			<Default Target="[SelectOption.Description]" Value="[Option.ToString]"/>
		</Rules>

		<Content>
			<core:Button Model="[SelectOption]" TextColor="Black" TextFocusColor="Black" TextMargins="8,-2,8,2"/>
		</Content>
	</UI>

  <!-- A list scroll button -->
  <UI Name="ScrollButton" BaseUI="core:Button">
    <Properties>
      <Size Name="TileMinSize" Size="0,0"/>
      <Size Name="TileMaxSize" Size="20,20"/>
    </Properties>

    <Rules>
      <!-- Mouse interactive only -->
      <Default Target="[Input.KeyInteractive]" Value="false"/>

      <!-- No label -->
      <Default Target="[Label.Visible]" Value="false"/>
      <Default Target="[Background.SizingPolicy]" Value="SizeToConstraint"/>

      <!-- Mouse focused styling -->
      <Condition Source="[Input.MouseFocus]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="[FocusImage]"/>
        </Actions>
      </Condition>
    </Rules>
  </UI>

</Mcml>
